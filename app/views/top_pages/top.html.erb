<!DOCTYPE html>
<html lang="ja">

<head>
<meta charset="UTF-8">
<title>Sample_GoogleMap</title>

<script src="https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/markerclusterer.js"></script>
<script async src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDFj52OV4F2yLRNV-p19g0Eb_1wunM7yLM&libraries=places&language=ja&callback=initMap"></script>

<style>
html { height: 100% }
body { height: 100% }
#map { height: 100%; width: 100%}
#pac-input {
    position: absolute;
    top: 10px;
    left: 25%;
    width: 50%;
    z-index: 5;
    padding: 10px;
    border: 1px solid #ccc;
    background-color: #fff;
    font-family: Roboto, Arial, sans-serif;
    font-size: 15px;
    font-weight: 300;
    text-overflow: ellipsis;
  }
  
  #pac-input:focus {
    border-color: #4d90fe;
  }
  
  #map-menu-container {
    position: absolute;
    top: 10px;
    left: 25%;
    z-index: 5;
    background-color: #fff;
    padding: 10px;
    border-radius: 5px;
    box-shadow: 0 2px 6px rgba(0,0,0,.3);
    width: 20%;
  }
  
  .controls {
    background-color: #fff;
    font-family: Roboto, Arial, sans-serif;
    font-size: 15px;
    font-weight: 300;
    margin-left: 12px;
    padding: 0 11px 0 13px;
    text-overflow: ellipsis;
    width: 400px;
  }
  
  .controls:focus {
    border-color: #4d90fe;
  }

  #map-control-container {
    position: absolute;
    top: 122px;
    left: 83px;
    z-index: 5;
  }
</style>
</head>

<body>
<div id="map-menu-container">
  <input id="pac-input" class="controls" type="text" placeholder="検索...">
  <!-- ここにその他のメニュー項目やフィルタリングのオプションを追加 -->
</div>
<div id="map-control-container">
  <button id="toggle-traffic" class="btn btn-success btn-sm toggle-button">トラフィック情報</button>
  <button id="toggle-transit" class="btn btn-secondary btn-sm toggle-button">トランジット情報</button>
  <button id="toggle-tourist-spots" class="btn btn-success btn-sm toggle-button">観光地情報</button>
</div>
<div id="map"></div>

<script>
  function initMap() {
    var MyLatLng = new google.maps.LatLng(36.5748441, 136.6483217); // 北陸地方の中心点
    var Options = {
      zoom: 8,
      center: MyLatLng,
      mapTypeId: 'roadmap'
    };
    var map = new google.maps.Map(document.getElementById('map'), Options);

    // TrafficLayer の追加
    var trafficLayer = new google.maps.TrafficLayer();
    trafficLayer.setMap(map);

    // TransitLayer の追加
    var transitLayer = new google.maps.TransitLayer();
    transitLayer.setMap(map);

    // トラフィックレイヤーのトグル機能
    document.getElementById('toggle-traffic').addEventListener('click', function() {
      if (trafficLayer.getMap()) {
        trafficLayer.setMap(null);
        this.classList.remove('btn-success');
        this.classList.add('btn-secondary');
      } else {
        trafficLayer.setMap(map);
        this.classList.remove('btn-secondary');
        this.classList.add('btn-success');
      }
    });

    // トランジットレイヤーのトグル機能
    document.getElementById('toggle-transit').addEventListener('click', function() {
      if (transitLayer.getMap()) {
        transitLayer.setMap(null);
        this.classList.remove('btn-secondary');
        this.classList.add('btn-success');
      } else {
        transitLayer.setMap(map);
        this.classList.remove('btn-success');
        this.classList.add('btn-secondary');
      }
    });

    var input = document.getElementById('pac-input');
    var searchBox = new google.maps.places.SearchBox(input);
    map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

    map.addListener('bounds_changed', function() {
      searchBox.setBounds(map.getBounds());
    });

    var markers = [];
    var infowindow = new google.maps.InfoWindow();

    searchBox.addListener('places_changed', function() {
      var places = searchBox.getPlaces();

      if (places.length == 0) {
        return;
      }

      markers.forEach(function(marker) {
        marker.setMap(null);
      });
      markers = [];

      var bounds = new google.maps.LatLngBounds();
      places.forEach(function(place) {
        if (!place.geometry) {
          console.log("Returned place contains no geometry");
          return;
        }

        var marker = new google.maps.Marker({
          map: map,
          title: place.name,
          position: place.geometry.location
        });

        markers.push(marker);

        if (place.geometry.viewport) {
          bounds.union(place.geometry.viewport);
        } else {
          bounds.extend(place.geometry.location);
        }

        // Place Detailsリクエスト
        var service = new google.maps.places.PlacesService(map);
        service.getDetails({
          placeId: place.place_id
        }, function(place, status) {
          if (status === google.maps.places.PlacesServiceStatus.OK) {
            var content = '<div><strong>' + place.name + '</strong><br>' +
                          'Address: ' + place.formatted_address + '<br>' +
                          'Phone: ' + (place.formatted_phone_number || 'N/A') + '<br>' +
                          'Website: ' + (place.website ? '<a href="' + place.website + '">' + place.website + '</a>' : 'N/A') + '<br>' +
                          'Hours: ' + (place.opening_hours ? place.opening_hours.weekday_text.join(', ') : 'N/A') + '<br>' +
                          '<img src="' + (place.photos && place.photos.length ? place.photos[0].getUrl() : '') + '" alt="Place image" style="width:100px;"><br>' +
                          'Reviews: ' + (place.reviews && place.reviews.length ? place.reviews[0].text : 'N/A') + '</div>';

            google.maps.event.addListener(marker, 'click', function() {
              infowindow.setContent(content);
              infowindow.open(map, marker);
            });
          }
        });
      });

      map.fitBounds(bounds);
    });

    var touristSpotMarkers = [];
    var markerCluster;

    fetch('/tourist_spots')
      .then(response => response.json())
      .then(data => {
        var markers = data.map(spot => {
          var marker = new google.maps.Marker({
            position: new google.maps.LatLng(spot.latitude, spot.longitude),
            title: spot.name,
          });

          var infowindow = new google.maps.InfoWindow({
            content: '<div><strong>' + spot.name + '</strong><br>' +
                     'Category: ' + spot.category + '</div>'
          });

          marker.addListener('click', function() {
            infowindow.open(map, marker);
          });

          return marker;
        });

        markerCluster = new MarkerClusterer(map, markers, {
          imagePath: 'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m'
        });
        touristSpotMarkers = markers;
      });

    document.getElementById('toggle-tourist-spots').addEventListener('click', function() {
      var button = this;
      var isDisplayed = markerCluster.getMarkers().length > 0;
      if (isDisplayed) {
        markerCluster.clearMarkers();
        button.classList.remove('btn-success');
        button.classList.add('btn-secondary');
      } else {
        markerCluster.addMarkers(touristSpotMarkers);
        button.classList.remove('btn-secondary');
        button.classList.add('btn-success');
      }
    });
  }
</script>
</body>
</html>
