<head>
  <script src="https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/markerclusterer.js"></script>
  <script async src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDFj52OV4F2yLRNV-p19g0Eb_1wunM7yLM&libraries=places&language=ja&callback=initMap"></script>
</head>

<body>
  <div id="search-container">
    <input id="pac-input" class="controls" type="text" placeholder="検索...">
    <button id="search-button" class="btn btn-primary btn-sm">検索</button>
  </div>
  <div id="map-control-container">
    <button id="toggle-traffic" class="btn btn-success btn-sm toggle-button">トラフィック情報</button>
    <button id="toggle-transit" class="btn btn-secondary btn-sm toggle-button">トランジット情報</button>
    <button id="toggle-tourist-spots" class="btn btn-success btn-sm toggle-button">観光地情報</button>
  </div>
  <div id="map"></div>

  <script>
    function initMap() {
      var MyLatLng = new google.maps.LatLng(36.5748441, 136.6483217); // 北陸地方の中心点
      var Options = {
        zoom: 8,
        center: MyLatLng,
        mapTypeId: 'roadmap'
      };
      var map = new google.maps.Map(document.getElementById('map'), Options);
      map.markers = [];

      // TrafficLayer の追加
      var trafficLayer = new google.maps.TrafficLayer();
      trafficLayer.setMap(map);

      // TransitLayer の追加
      var transitLayer = new google.maps.TransitLayer();
      transitLayer.setMap(map);

      // トラフィックレイヤーのトグル機能
      document.getElementById('toggle-traffic').addEventListener('click', function() {
        if (trafficLayer.getMap()) {
          trafficLayer.setMap(null);
          this.classList.remove('btn-success');
          this.classList.add('btn-secondary');
        } else {
          trafficLayer.setMap(map);
          this.classList.remove('btn-secondary');
          this.classList.add('btn-success');
        }
      });

      // トランジットレイヤーのトグル機能
      document.getElementById('toggle-transit').addEventListener('click', function() {
        if (transitLayer.getMap()) {
          transitLayer.setMap(null);
          this.classList.remove('btn-secondary');
          this.classList.add('btn-success');
        } else {
          transitLayer.setMap(map);
          this.classList.remove('btn-success');
          this.classList.add('btn-secondary');
        }
      });

      var input = document.getElementById('pac-input');
      map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
      var infowindow = new google.maps.InfoWindow();
      var service = new google.maps.places.PlacesService(map);

      document.getElementById('search-button').addEventListener('click', function() {
        var input = document.getElementById('pac-input').value;
        if (!input) return;
        var request = {
          query: input,
          fields: ['name', 'geometry', 'place_id'],
        };

        service.findPlaceFromQuery(request, function(results, status) {
          if (status === google.maps.places.PlacesServiceStatus.OK && results) {
            map.markers.forEach(marker => marker.setMap(null));
            map.markers = [];
            var bounds = new google.maps.LatLngBounds();
            results.forEach(place => {
              if (!place.geometry) return;

              var marker = new google.maps.Marker({
                  map: map,
                  title: place.name,
                  position: place.geometry.location
              });
              map.markers.push(marker);

              // Place Detailsリクエスト
              marker.addListener('click', function() {
                service.getDetails({placeId: place.place_id}, function(result, status) {
                  if (status === google.maps.places.PlacesServiceStatus.OK) {
                    var content = '<div><strong>' + result.name + '</strong><br>' +
                                  'Address: ' + result.formatted_address + '<br>' +
                                  'Phone: ' + (result.formatted_phone_number || 'N/A') + '<br>' +
                                  'Website: ' + (result.website ? '<a href="' + result.website + '">' + result.website + '</a>' : 'N/A') + '<br>' +
                                  'Hours: ' + (result.opening_hours ? result.opening_hours.weekday_text.join(', ') : 'N/A') + '<br>' +
                                  '<img src="' + (result.photos && result.photos.length ? result.photos[0].getUrl() : '') + '" alt="Place image" style="width:100px;"><br>' +
                                  'Reviews: ' + (result.reviews && result.reviews.length ? result.reviews[0].text : 'N/A') + '</div>';
                    infowindow.setContent(content);
                    infowindow.open(map, marker);
                  }
                });
              });
              if (place.geometry.viewport) {
                  bounds.union(place.geometry.viewport);
              } else {
                  bounds.extend(place.geometry.location);
              }
            });
            map.fitBounds(bounds);
          }
        });
      });

      var touristSpotMarkers = [];
      var markerCluster;

      fetch('/tourist_spots')
        .then(response => response.json())
        .then(data => {
          var markers = data.map(spot => {
            var marker = new google.maps.Marker({
              position: new google.maps.LatLng(spot.latitude, spot.longitude),
              title: spot.name,
            });

            var infowindow = new google.maps.InfoWindow({
              content: '<div><strong>' + spot.name + '</strong><br>' +
                       'Category: ' + spot.category + '</div>'
            });

            marker.addListener('click', function() {
              infowindow.open(map, marker);
            });

            return marker;
          });

          markerCluster = new MarkerClusterer(map, markers, {
            imagePath: 'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m'
          });
          touristSpotMarkers = markers;
        });

      document.getElementById('toggle-tourist-spots').addEventListener('click', function() {
        var button = this;
        var isDisplayed = markerCluster.getMarkers().length > 0;
        if (isDisplayed) {
          markerCluster.clearMarkers();
          button.classList.remove('btn-success');
          button.classList.add('btn-secondary');
        } else {
          markerCluster.addMarkers(touristSpotMarkers);
          button.classList.remove('btn-secondary');
          button.classList.add('btn-success');
        }
      });
    }
  </script>
</body>
